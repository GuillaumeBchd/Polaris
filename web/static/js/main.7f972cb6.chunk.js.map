{"version":3,"sources":["components/Login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Login","query","URLSearchParams","useLocation","search","useState","ClientName","setClientName","ClientCreator","setClientCreator","get","redirect_uri","setRedirect_uri","client_id","scope","state","useEffect","a","fetch","res","ok","json","name","creator","fetchClientInfo","Fragment","className","href","method","type","value","htmlFor","id","autoComplete","required","placeholder","minLength","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f972cb6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n  }\r\n\r\n\r\nfunction Login() {\r\n    let query = useQuery();\r\n\r\n    // CLIENT APP\r\n    const [ClientName, setClientName] = useState<string>(\"Default\")\r\n    const [ClientCreator, setClientCreator] = useState<string>(\"Default\")\r\n    const [redirect_uri, setRedirect_uri] = useState<string | null>(query.get(\"redirect_uri\"))\r\n    const [client_id, ] = useState<string | null>(query.get(\"client_id\"))\r\n    const [scope, ] = useState<string | null>(query.get(\"scope\"))\r\n    const [state, ] = useState<string | null>(query.get(\"state\"))\r\n     \r\n\r\n    //http://localhost:3000/?client_id=1234&state=54&scope=openid&redirect_uri=google.com\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        const fetchClientInfo = async () => {\r\n            try {\r\n                const res = await fetch(\"/api/client/\"+client_id)\r\n                if (res.ok) {\r\n                    const json = await res.json()\r\n                    setClientName(json.name)\r\n                    setClientCreator(json.creator)\r\n        \r\n                    if (redirect_uri === null ) {\r\n                        setRedirect_uri(json.redirect_uri)\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                \r\n            }\r\n        }\r\n        fetchClientInfo()\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <React.Fragment> \r\n            <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n                <div className=\"max-w-md w-full space-y-8\">\r\n                    <div>\r\n                        <div>\r\n                            {/*\r\n                            <img className=\"mx-auto h-12 w-auto\" src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\" alt=\"Workflow\" />\r\n                            */}\r\n                            \r\n                            <h2 className=\"text-center text-3xl font-extrabold text-gray-900\">\r\n                                Login to your account\r\n                            </h2>\r\n                            <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n                                Or <a href=\"/register\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">register for a new account </a>\r\n                            </p>\r\n                        </div>\r\n                        <form className=\"mt-8 space-y-6\" method=\"POST\">\r\n                            {\r\n                                client_id &&\r\n                                <input type=\"hidden\" name=\"client_id\" value={client_id} />\r\n                            }\r\n                            {\r\n                                state &&\r\n                                <input type=\"hidden\" name=\"state\" value={state} />\r\n                            }\r\n                            {\r\n                                scope &&\r\n                                <input type=\"hidden\" name=\"scope\" value={scope} />\r\n                            }\r\n                            {\r\n                                redirect_uri &&\r\n                                <input type=\"hidden\" name=\"redirect_uri\" value={redirect_uri} />\r\n                            }\r\n                            <input type=\"hidden\" name=\"remember\" value=\"true\" />\r\n                            <div className=\"rounded-md shadow-sm -space-y-px\">\r\n                                <div>\r\n                                    <label htmlFor=\"email-address\" className=\"sr-only\">Email address</label>\r\n                                    <input id=\"email-address\" name=\"email\" type=\"email\" autoComplete=\"email\" required className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Email address\" />\r\n                                </div>\r\n                                <div>\r\n                                    <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n                                    <input id=\"password\" name=\"password\" type=\"password\" minLength={8} autoComplete=\"current-password\" required className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Password\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div className=\"flex items-center\">\r\n                                    <input id=\"remember_me\" name=\"remember_me\" type=\"checkbox\" className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\" />\r\n                                    <label htmlFor=\"remember_me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                                        Remember me\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div className=\"text-sm\">\r\n                                    <a href=\"/recover\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n                                        Forgot your password?\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <button type=\"submit\" className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n                                    Login\r\n                                </button>\r\n                            </div>\r\n\r\n                            \r\n\r\n                        </form>\r\n                    </div>\r\n\r\n                    {\r\n                        client_id &&\r\n                        <div className=\"border-solid border-4 border-light-blue-500\">\r\n                            <h1 className=\"mt-2 mb-4 text-center text-l font-bold text-gray-900\">\r\n                                <span className=\"text-l font-extrabold text-indigo-600\">{ClientName}</span> by <span className=\"text-l font-extrabold text-indigo-600\">{ClientCreator}</span> wants to access your data.\r\n                            </h1>\r\n\r\n                            <p className=\"text-center text-gray-900\">\r\n                                By logging in you authorize <span className=\"text-l font-extrabold text-indigo-600\">{ClientName}</span> to access your data.\r\n                            </p>\r\n\r\n                            <div className=\"mt-2 mb-2\">\r\n                                <p className=\"text-center text-gray-900\">\r\n                                    Authorizing will redirect to :\r\n                                </p>\r\n                                <p className=\"text-center text-indigo-600\">\r\n                                    {redirect_uri}\r\n                                </p>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Login from './components/Login';\n\nfunction App() {\n    return (  \n        <BrowserRouter>\n            <Login/>    \n        </BrowserRouter> \n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.output.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}